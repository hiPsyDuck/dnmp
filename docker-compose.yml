version: "3.7"
services: 
  nginx:
    restart: always
    image: ${NGINX_IMAGE}
    container_name: ${NGINX_CONTAINER}
    depends_on:
      - php8
    volumes: 
      - ${PROJECT_DIR}:/var/www:rw
      - ${NGINX_CONF_DIR}:/etc/nginx/conf.d:rw
      - ${NGINX_CONF}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx:rw
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
    environment:
      TZ: ${TZ}
    networks: 
      - default
    command: [nginx-debug, '-g', 'daemon off;']
  php8:
    restart: always
    depends_on: 
      - mysql
      - redis
    build:                           # 构建自定义镜像
      context: ./services/php8/      # 指定Dockerfile文件所在路径
      dockerfile: Dockerfile         # 指定Dockerfile文件名称
      args: 
        PHP_IMAGE: ${PHP_IMAGE}
        # SSH_DIR: ${SSH_DIR}
        GIT_NAME: ${GIT_NAME}
        GIT_EMAIL: ${GIT_EMAIL}
    image: ${PHP_IMAGE_NAME}
    container_name: ${PHP_CONTAINER}
    tty: true
    volumes: 
      - ${PROJECT_DIR}:/var/www:rw
      - ${PHP_INI}:/usr/local/etc/php/php.ini:ro
      - ${PHP_LOG_DIR}:/var/log/php:rw
      - ${SSH_DIR}:/root/.ssh:rw
    expose: 
      - ${PHP_PORT}
    links:
      - mysql
      - redis
    environment: 
      TZ: ${TZ}
    networks:
      - default
    cap_add:
      - SYS_PTRACE
  mysql:
    restart: always
    image: ${MYSQL_IMAGE}
    container_name: ${MYSQL_CONTAINER}
    ports: 
      - "${MYSQL_PORT}:3306"
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${TZ}
    volumes: 
      - ${MYSQL_CNF}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql:rw
    command: --default-authentication-plugin=mysql_native_password
    networks: 
      - default
  redis:
    restart: always
    image: ${REDIS_IMAGE}
    container_name: ${REDIS_CONTAINER}
    ports: 
      - "${REDIS_PORT}:6379"
    volumes: 
      - ${REDIS_CONF}:/usr/local/etc/redis.conf:ro
      - ${REDIS_DATA}:/data:rw
      - ${REDIS_LOG}:/var/log/redis:rw
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      TZ: ${TZ}
    networks: 
      - default
 
networks: 
  default:
    driver: ${NETWORK_DRIVER}